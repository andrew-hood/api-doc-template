{
  "openapi": "3.0.0",
  "paths": {
    "/webhooks": {
      "post": {
        "security": [
          {
            "OAuth2": ["webhook.write"]
          }
        ],
        "operationId": "WebhookController_createPortalWebhookConfiguration",
        "summary": "Create a webhook",
        "description": "Creates a new webhook that will fire events to the given url. The fire_child_portal_events parameter can be configured to include events triggered by all connected portals.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWebhookDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Webhook created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid POST parameters provided"
          },
          "403": {
            "description": "Invalid permission to create the webhook"
          }
        },
        "tags": ["Webhooks"]
      }
    }
  },
  "info": {
    "title": "webhook",
    "description": "This server handles the configuration of webhooks.",
    "version": "2022-07-01",
    "contact": {}
  },
  "tags": [
    {
      "name": "Webhooks",
      "description": ""
    }
  ],
  "servers": [
    {
      "url": "/webhook"
    }
  ],
  "components": {
    "securitySchemes": {
      "OAuth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://auth.go1.com/oauth/authorize",
            "tokenUrl": "https://auth.go1.com/oauth/token",
            "scopes": {
              "webhook.write": "Write access to your portal's webhooks."
            }
          }
        }
      }
    },
    "schemas": {
      "CreateWebhookDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "My webhook for course completion",
            "description": "A name or description of what the webhook is used for."
          },
          "url": {
            "type": "string",
            "example": "https://webhook-consumer.com",
            "description": "The URL of the webhook endpoint."
          },
          "event_types": {
            "type": "array",
            "example": ["enrollment.complete"],
            "description": "The list of events that can be enabled for this endpoint.",
            "items": {
              "type": "string",
              "enum": ["enrollment.complete"]
            }
          },
          "fire_child_portal_events": {
            "type": "boolean",
            "example": true,
            "description": "Include events triggered by all connected customer portals."
          }
        },
        "required": ["url", "event_types"]
      },
      "WebhookDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "xUjKifleke4u",
            "description": "The ID of the webhook configuration."
          },
          "portal_id": {
            "type": "string",
            "example": "11905591",
            "description": "The Go1 portal against which the webhook is configured."
          },
          "name": {
            "type": "string",
            "example": "My webhook for course completion",
            "description": "A name or description of what the webhook is used for."
          },
          "url": {
            "type": "string",
            "example": "https://webhook-consumer.com",
            "description": "The URL of the webhook endpoint."
          },
          "event_types": {
            "type": "array",
            "example": ["enrollment.complete"],
            "description": "The list of events that are enabled for this endpoint.",
            "items": {
              "type": "string",
              "enum": ["enrollment.complete"]
            }
          },
          "status": {
            "type": "string",
            "example": "active",
            "description": "The status of the webhook. It can be active or inactive."
          },
          "fire_child_portal_events": {
            "type": "boolean",
            "example": true,
            "description": "Include events triggered by all connected customer portals."
          },
          "created_by": {
            "type": "string",
            "example": "19491473",
            "description": "The user ID of the user who created the webhook."
          },
          "created_date": {
            "type": "string",
            "format": "date-time",
            "description": "Time at which the webhook was created (ISO 8601 in UTC)."
          }
        },
        "required": [
          "id",
          "url",
          "event_types",
          "status",
          "created_by",
          "created_date"
        ]
      }
    }
  }
}
